
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMA CORDER CORIZQ CTEF CTEI CTE_STRING DIF DIV DO DOSPTS ELSE FLT FOR ID IF IGU IGUIGU INT KEYDER KEYIZQ MAIN MAS MAY MEN MENOS MODULE MULT OR PARDER PARIZQ PRO PTOCOM READ RETURN THEN TO VARTOKEN VOID WHILE WRITEprogram : PRO ID r_register_global PTOCOM opvars opfunciones MAIN PARIZQ PARDER bloqueopvars : vars\n    | emptyopfunciones : funciones opfunciones\n    | emptyvars : VARTOKEN tipo ID r_register_variable_name arr arr varciclo PTOCOM tipociclovarciclo : COMA ID r_register_variable_name arr arr varciclo\n    | emptyarr : CORIZQ CTEI CORDER\n    | emptytipociclo : tipo opciontipo\n    | emptyopciontipo : ID arr arr varciclo PTOCOM tipociclo\n    | MODULE ID PARIZQ opcionvarsimple PARDER opvars bloquefunctipo : INT r_register_variable_type\n    | FLT r_register_variable_type\n    | CHAR r_register_variable_typetipo_func : INT r_register_function\n    | FLT r_register_function\n    | CHAR r_register_function\n    varsimple : tipo identfunciones : funcionvoid \n    | funcionfuncionvoid : VOID r_register_function MODULE ID r_update_curr_function_name PARIZQ opcionvarsimple PARDER opvars bloqueopcionvarsimple : varsimple ciclovarsimple\n    | emptyciclovarsimple : COMA varsimple ciclovarsimple\n    | emptyfuncion : tipo_func MODULE ID r_update_curr_function_name PARIZQ opcionvarsimple PARDER opvars bloquefuncident : ID arrini arriniarrini : CORIZQ CORDER\n    | emptybloque : KEYIZQ bloqueopcion KEYDERbloqueopcion : estatuto bloqueopcion\n    | emptybloquefunc : KEYIZQ bloqueopcionfunc KEYDERbloqueopcionfunc : estatutofunc bloqueopcionfunc\n    | emptyestatuto : asignacion\n    | decision\n    | escritura\n    | llamadafunc\n    | repeticion\n    | lecturaestatutofunc : asignacion\n    | decisionfunc\n    | escritura\n    | llamadafunc\n    | repeticionfunc\n    | lectura\n    | RETURN PARIZQ expresion PARDER PTOCOM\n    asignacion : ID asignacionarr asignacionarr IGU expresion PTOCOMasignacionarr : CORIZQ expresion CORDER\n    | empty\n    expresion : exp expresionsigexpresionsig : MAY expresionsigequal exp\n    | MEN expresionsigequal exp\n    | DIF exp\n    | IGUIGU exp\n    | AND exp\n    | OR exp\n    | emptyexpresionsigequal : IGU\n    | emptyexp : termino expcicloexpciclo : MAS exp\n    | MENOS exp\n    | empty\n    termino : factor factorciclofactorciclo : MULT termino\n    | DIV termino\n    | empty\n    factor : PARIZQ expresion PARDER\n    | masomenos varcte\n    | ID opcionid\n    masomenos : MAS\n    | MENOS\n    | empty\n    opcionid : arrexp arrexp\n    | PARIZQ parametros PARDERvarcte : iddim\n    | CTEI\n    | CTEF\n    parametros : expresion cicloparametros\n    | emptycicloparametros : COMA expresion cicloparametros\n    | empty\n    decision : IF PARIZQ expresion PARDER THEN bloque ELSE bloqueescritura : WRITE PARIZQ escrituraciclo otro PARDER PTOCOMescrituraciclo : CTE_STRING\n    | expresionotro : COMA escrituraciclo otro\n    | empty\n    llamadafunc : ID PARIZQ parametros PARDER PTOCOMlectura : READ PARIZQ iddim ciclodim PARDER PTOCOMciclodim : COMA iddim ciclodim\n    | empty\n    iddim : ID arrexp arrexparrexp : CORIZQ expresion CORDER\n    | emptyrepeticion : condicional \n    | nocondicional\n    condicional : WHILE PARIZQ expresion PARDER DO bloquenocondicional : FOR iddim IGU expresion TO expresion DO bloque\n    decisionfunc : IF PARIZQ expresion PARDER THEN bloquefunc ELSE bloquefuncrepeticionfunc : condicionalfunc\n    | nocondicionalfunc\n    condicionalfunc : WHILE PARIZQ expresion PARDER DO bloquefuncnocondicionalfunc : FOR iddim IGU expresion TO expresion DO bloquefuncempty :r_register_global : r_register_function : r_update_curr_function_name : r_register_variable_type : r_register_variable_name : '
    
_lr_action_items = {'PRO':([0,],[2,]),'$end':([1,45,77,],[0,-1,-33,]),'ID':([2,20,21,22,23,27,32,33,34,36,46,52,54,55,56,57,58,59,63,64,67,72,74,77,80,81,83,84,85,86,100,103,107,108,109,111,118,120,128,132,135,139,142,143,144,145,146,147,150,151,154,155,164,167,175,181,187,189,190,191,192,207,211,213,214,215,216,217,218,221,222,224,228,234,236,238,240,242,243,244,254,257,258,265,268,272,277,278,],[3,31,-114,-114,-114,37,-15,-16,-17,40,60,60,-39,-40,-41,-42,-43,-44,-101,-102,88,95,97,-33,99,99,99,99,88,99,99,-78,88,-76,-77,-78,99,99,180,99,99,99,-110,-110,99,99,99,99,99,99,99,99,99,88,60,226,-94,99,-63,-64,99,99,60,-45,-46,-47,-48,-49,-50,-106,-107,88,-52,-89,-95,-103,-36,99,99,99,99,-88,-104,-51,99,-108,-105,-109,]),'PTOCOM':([3,4,31,38,42,44,49,73,75,76,88,97,99,104,105,106,119,121,131,133,134,137,141,148,149,152,153,156,157,158,159,160,171,180,182,183,184,186,193,194,195,196,197,198,199,200,202,204,208,225,227,229,231,232,246,248,255,259,],[-111,5,-115,-110,-110,-10,-110,96,-8,-9,-110,-115,-110,-110,-110,-110,-110,-100,-110,-75,-110,187,-55,-62,-65,-68,-69,-72,-74,-81,-82,-83,-98,-110,-110,228,-79,-73,-58,-59,-60,-61,-66,-67,-70,-71,234,236,-99,-110,-110,-80,-56,-57,-110,-7,263,265,]),'VARTOKEN':([5,90,122,264,],[9,9,9,9,]),'VOID':([5,6,7,8,11,13,14,77,96,129,130,174,179,209,240,263,269,274,],[-110,15,-2,-3,15,-22,-23,-33,-110,-6,-12,-29,-11,-24,-36,-110,-13,-14,]),'INT':([5,6,7,8,9,11,13,14,48,68,77,92,96,129,130,174,179,209,240,247,263,269,274,],[-110,17,-2,-3,21,17,-22,-23,21,21,-33,21,21,-6,-12,-29,-11,-24,-36,21,21,-13,-14,]),'FLT':([5,6,7,8,9,11,13,14,48,68,77,92,96,129,130,174,179,209,240,247,263,269,274,],[-110,18,-2,-3,22,18,-22,-23,22,22,-33,22,22,-6,-12,-29,-11,-24,-36,22,22,-13,-14,]),'CHAR':([5,6,7,8,9,11,13,14,48,68,77,92,96,129,130,174,179,209,240,247,263,269,274,],[-110,19,-2,-3,23,19,-22,-23,23,23,-33,23,23,-6,-12,-29,-11,-24,-36,23,23,-13,-14,]),'MAIN':([5,6,7,8,10,11,12,13,14,25,77,96,129,130,174,179,209,240,263,269,274,],[-110,-110,-2,-3,24,-110,-5,-22,-23,-4,-33,-110,-6,-12,-29,-11,-24,-36,-110,-13,-14,]),'KEYIZQ':([7,8,39,90,96,122,123,129,130,173,179,201,206,240,249,250,263,264,266,267,269,270,274,275,276,],[-2,-3,46,-110,-110,-110,175,-6,-12,46,-11,46,46,-36,46,46,-110,-110,175,175,-13,175,-14,175,175,]),'MODULE':([15,16,17,18,19,21,22,23,26,28,29,30,32,33,34,128,],[-112,27,-112,-112,-112,-114,-114,-114,36,-18,-19,-20,-15,-16,-17,181,]),'PARIZQ':([24,37,40,41,47,60,61,62,65,66,80,81,83,84,86,99,100,118,120,132,135,139,142,143,144,145,146,147,150,151,154,155,164,189,190,191,192,207,219,220,223,226,242,243,244,254,268,],[35,-113,-113,48,68,80,83,84,85,86,100,100,100,100,100,135,100,100,100,100,100,100,-110,-110,100,100,100,100,100,100,100,100,100,100,-63,-64,100,100,242,243,244,247,100,100,100,100,100,]),'CORIZQ':([31,38,42,44,60,76,79,82,88,95,97,99,119,121,125,127,131,134,161,178,180,182,208,225,],[-115,43,43,-10,81,-9,81,-54,120,126,-115,120,120,-100,126,-32,43,120,-53,-31,43,43,-99,43,]),'COMA':([31,38,42,44,49,70,76,88,94,95,97,99,102,104,105,106,113,114,115,116,119,121,124,125,127,131,133,134,141,148,149,152,153,156,157,158,159,160,171,177,178,180,182,184,186,188,193,194,195,196,197,198,199,200,203,205,208,225,227,229,231,232,246,],[-115,-110,-110,-10,74,92,-9,-110,-21,-110,-115,-110,139,-110,-110,-110,164,-90,-91,167,-110,-100,92,-110,-32,-110,-75,-110,-55,-62,-65,-68,-69,-72,-74,-81,-82,-83,-98,-30,-31,-110,-110,-79,-73,139,-58,-59,-60,-61,-66,-67,-70,-71,164,167,-99,-110,74,-80,-56,-57,74,]),'PARDER':([35,48,68,69,70,71,80,88,89,91,93,94,95,99,101,102,103,104,105,106,112,113,114,115,116,117,119,121,124,125,127,133,134,135,136,138,140,141,148,149,152,153,156,157,158,159,160,163,165,166,168,171,176,177,178,184,185,186,188,193,194,195,196,197,198,199,200,203,205,208,229,230,231,232,235,237,247,251,252,253,256,],[39,-110,-110,90,-110,-26,-110,-110,122,-25,-28,-21,-110,-110,137,-110,-85,-110,-110,-110,162,-110,-90,-91,-110,169,-110,-100,-110,-110,-32,-75,-110,-110,186,-84,-87,-55,-62,-65,-68,-69,-72,-74,-81,-82,-83,202,-93,204,-97,-98,-27,-30,-31,-79,229,-73,-110,-58,-59,-60,-61,-66,-67,-70,-71,-110,-110,-99,-80,-86,-56,-57,-92,-96,-110,259,260,261,264,]),'CTEI':([43,80,81,83,84,86,100,103,107,108,109,111,118,120,132,135,139,142,143,144,145,146,147,150,151,154,155,164,189,190,191,192,207,242,243,244,254,268,],[50,-110,-110,-110,-110,-110,-110,-78,159,-76,-77,-78,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-63,-64,-110,-110,-110,-110,-110,-110,-110,]),'KEYDER':([46,51,52,53,54,55,56,57,58,59,63,64,77,78,175,187,210,211,212,213,214,215,216,217,218,221,222,228,234,236,238,240,241,257,258,265,272,277,278,],[-110,77,-110,-35,-39,-40,-41,-42,-43,-44,-101,-102,-33,-34,-110,-94,240,-110,-38,-45,-46,-47,-48,-49,-50,-106,-107,-52,-89,-95,-103,-36,-37,-88,-104,-51,-108,-105,-109,]),'IF':([46,52,54,55,56,57,58,59,63,64,77,175,187,211,213,214,215,216,217,218,221,222,228,234,236,238,240,257,258,265,272,277,278,],[61,61,-39,-40,-41,-42,-43,-44,-101,-102,-33,220,-94,220,-45,-46,-47,-48,-49,-50,-106,-107,-52,-89,-95,-103,-36,-88,-104,-51,-108,-105,-109,]),'WRITE':([46,52,54,55,56,57,58,59,63,64,77,175,187,211,213,214,215,216,217,218,221,222,228,234,236,238,240,257,258,265,272,277,278,],[62,62,-39,-40,-41,-42,-43,-44,-101,-102,-33,62,-94,62,-45,-46,-47,-48,-49,-50,-106,-107,-52,-89,-95,-103,-36,-88,-104,-51,-108,-105,-109,]),'READ':([46,52,54,55,56,57,58,59,63,64,77,175,187,211,213,214,215,216,217,218,221,222,228,234,236,238,240,257,258,265,272,277,278,],[65,65,-39,-40,-41,-42,-43,-44,-101,-102,-33,65,-94,65,-45,-46,-47,-48,-49,-50,-106,-107,-52,-89,-95,-103,-36,-88,-104,-51,-108,-105,-109,]),'WHILE':([46,52,54,55,56,57,58,59,63,64,77,175,187,211,213,214,215,216,217,218,221,222,228,234,236,238,240,257,258,265,272,277,278,],[66,66,-39,-40,-41,-42,-43,-44,-101,-102,-33,223,-94,223,-45,-46,-47,-48,-49,-50,-106,-107,-52,-89,-95,-103,-36,-88,-104,-51,-108,-105,-109,]),'FOR':([46,52,54,55,56,57,58,59,63,64,77,175,187,211,213,214,215,216,217,218,221,222,228,234,236,238,240,257,258,265,272,277,278,],[67,67,-39,-40,-41,-42,-43,-44,-101,-102,-33,224,-94,224,-45,-46,-47,-48,-49,-50,-106,-107,-52,-89,-95,-103,-36,-88,-104,-51,-108,-105,-109,]),'CORDER':([50,88,99,104,105,106,110,119,121,126,133,134,141,148,149,152,153,156,157,158,159,160,171,172,184,186,193,194,195,196,197,198,199,200,208,229,231,232,],[76,-110,-110,-110,-110,-110,161,-110,-100,178,-75,-110,-55,-62,-65,-68,-69,-72,-74,-81,-82,-83,-98,208,-79,-73,-58,-59,-60,-61,-66,-67,-70,-71,-99,-80,-56,-57,]),'IGU':([60,79,82,87,88,98,119,121,142,143,161,171,208,245,],[-110,-110,-54,118,-110,132,-110,-100,190,190,-53,-98,-99,254,]),'ELSE':([77,233,240,271,],[-33,249,-36,275,]),'CTEF':([80,81,83,84,86,100,103,107,108,109,111,118,120,132,135,139,142,143,144,145,146,147,150,151,154,155,164,189,190,191,192,207,242,243,244,254,268,],[-110,-110,-110,-110,-110,-110,-78,160,-76,-77,-78,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-110,-63,-64,-110,-110,-110,-110,-110,-110,-110,]),'MAS':([80,81,83,84,86,88,99,100,105,106,118,119,120,121,132,133,134,135,139,142,143,144,145,146,147,150,151,153,154,155,156,157,158,159,160,164,171,184,186,189,190,191,192,199,200,207,208,229,242,243,244,254,268,],[108,108,108,108,108,-110,-110,108,150,-110,108,-110,108,-100,108,-75,-110,108,108,-110,-110,108,108,108,108,108,108,-69,108,108,-72,-74,-81,-82,-83,108,-98,-79,-73,108,-63,-64,108,-70,-71,108,-99,-80,108,108,108,108,108,]),'MENOS':([80,81,83,84,86,88,99,100,105,106,118,119,120,121,132,133,134,135,139,142,143,144,145,146,147,150,151,153,154,155,156,157,158,159,160,164,171,184,186,189,190,191,192,199,200,207,208,229,242,243,244,254,268,],[109,109,109,109,109,-110,-110,109,151,-110,109,-110,109,-100,109,-75,-110,109,109,-110,-110,109,109,109,109,109,109,-69,109,109,-72,-74,-81,-82,-83,109,-98,-79,-73,109,-63,-64,109,-70,-71,109,-99,-80,109,109,109,109,109,]),'CTE_STRING':([84,164,],[114,114,]),'MULT':([88,99,106,119,121,133,134,157,158,159,160,171,184,186,208,229,],[-110,-110,154,-110,-100,-75,-110,-74,-81,-82,-83,-98,-79,-73,-99,-80,]),'DIV':([88,99,106,119,121,133,134,157,158,159,160,171,184,186,208,229,],[-110,-110,155,-110,-100,-75,-110,-74,-81,-82,-83,-98,-79,-73,-99,-80,]),'MAY':([88,99,104,105,106,119,121,133,134,149,152,153,156,157,158,159,160,171,184,186,197,198,199,200,208,229,],[-110,-110,142,-110,-110,-110,-100,-75,-110,-65,-68,-69,-72,-74,-81,-82,-83,-98,-79,-73,-66,-67,-70,-71,-99,-80,]),'MEN':([88,99,104,105,106,119,121,133,134,149,152,153,156,157,158,159,160,171,184,186,197,198,199,200,208,229,],[-110,-110,143,-110,-110,-110,-100,-75,-110,-65,-68,-69,-72,-74,-81,-82,-83,-98,-79,-73,-66,-67,-70,-71,-99,-80,]),'DIF':([88,99,104,105,106,119,121,133,134,149,152,153,156,157,158,159,160,171,184,186,197,198,199,200,208,229,],[-110,-110,144,-110,-110,-110,-100,-75,-110,-65,-68,-69,-72,-74,-81,-82,-83,-98,-79,-73,-66,-67,-70,-71,-99,-80,]),'IGUIGU':([88,99,104,105,106,119,121,133,134,149,152,153,156,157,158,159,160,171,184,186,197,198,199,200,208,229,],[-110,-110,145,-110,-110,-110,-100,-75,-110,-65,-68,-69,-72,-74,-81,-82,-83,-98,-79,-73,-66,-67,-70,-71,-99,-80,]),'AND':([88,99,104,105,106,119,121,133,134,149,152,153,156,157,158,159,160,171,184,186,197,198,199,200,208,229,],[-110,-110,146,-110,-110,-110,-100,-75,-110,-65,-68,-69,-72,-74,-81,-82,-83,-98,-79,-73,-66,-67,-70,-71,-99,-80,]),'OR':([88,99,104,105,106,119,121,133,134,149,152,153,156,157,158,159,160,171,184,186,197,198,199,200,208,229,],[-110,-110,147,-110,-110,-110,-100,-75,-110,-65,-68,-69,-72,-74,-81,-82,-83,-98,-79,-73,-66,-67,-70,-71,-99,-80,]),'TO':([88,99,104,105,106,119,121,133,134,141,148,149,152,153,156,157,158,159,160,170,171,184,186,193,194,195,196,197,198,199,200,208,229,231,232,262,],[-110,-110,-110,-110,-110,-110,-100,-75,-110,-55,-62,-65,-68,-69,-72,-74,-81,-82,-83,207,-98,-79,-73,-58,-59,-60,-61,-66,-67,-70,-71,-99,-80,-56,-57,268,]),'DO':([88,99,104,105,106,119,121,133,134,141,148,149,152,153,156,157,158,159,160,169,171,184,186,193,194,195,196,197,198,199,200,208,229,231,232,239,261,273,],[-110,-110,-110,-110,-110,-110,-100,-75,-110,-55,-62,-65,-68,-69,-72,-74,-81,-82,-83,206,-98,-79,-73,-58,-59,-60,-61,-66,-67,-70,-71,-99,-80,-56,-57,250,267,276,]),'THEN':([162,260,],[201,266,]),'RETURN':([175,187,211,213,214,215,216,217,218,221,222,228,234,236,240,265,272,277,278,],[219,-94,219,-45,-46,-47,-48,-49,-50,-106,-107,-52,-89,-95,-36,-51,-108,-105,-109,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'r_register_global':([3,],[4,]),'opvars':([5,90,122,264,],[6,123,173,270,]),'vars':([5,90,122,264,],[7,7,7,7,]),'empty':([5,6,11,38,42,46,48,49,52,60,68,70,79,80,81,83,84,86,88,90,95,96,99,100,102,104,105,106,113,116,118,119,120,122,124,125,131,132,134,135,139,142,143,144,145,146,147,150,151,154,155,164,175,180,182,188,189,192,203,205,207,211,225,227,242,243,244,246,247,254,263,264,268,],[8,12,12,44,44,53,71,75,53,82,71,93,82,103,111,111,111,111,121,8,127,130,121,111,140,148,152,156,165,168,111,121,111,8,93,127,44,111,121,103,111,191,191,111,111,111,111,111,111,111,111,111,212,44,44,140,111,111,165,168,111,212,44,75,111,111,111,75,71,111,130,8,111,]),'opfunciones':([6,11,],[10,25,]),'funciones':([6,11,],[11,11,]),'funcionvoid':([6,11,],[13,13,]),'funcion':([6,11,],[14,14,]),'tipo_func':([6,11,],[16,16,]),'tipo':([9,48,68,92,96,247,263,],[20,72,72,72,128,72,128,]),'r_register_function':([15,17,18,19,],[26,28,29,30,]),'r_register_variable_type':([21,22,23,],[32,33,34,]),'r_register_variable_name':([31,97,],[38,131,]),'r_update_curr_function_name':([37,40,],[41,47,]),'arr':([38,42,131,180,182,225,],[42,49,182,225,227,246,]),'bloque':([39,173,201,206,249,250,],[45,209,233,238,257,258,]),'bloqueopcion':([46,52,],[51,78,]),'estatuto':([46,52,],[52,52,]),'asignacion':([46,52,175,211,],[54,54,213,213,]),'decision':([46,52,],[55,55,]),'escritura':([46,52,175,211,],[56,56,215,215,]),'llamadafunc':([46,52,175,211,],[57,57,216,216,]),'repeticion':([46,52,],[58,58,]),'lectura':([46,52,175,211,],[59,59,218,218,]),'condicional':([46,52,],[63,63,]),'nocondicional':([46,52,],[64,64,]),'opcionvarsimple':([48,68,247,],[69,89,256,]),'varsimple':([48,68,92,247,],[70,70,124,70,]),'varciclo':([49,227,246,],[73,248,255,]),'asignacionarr':([60,79,],[79,98,]),'iddim':([67,85,107,167,224,],[87,116,158,205,245,]),'ciclovarsimple':([70,124,],[91,176,]),'ident':([72,],[94,]),'parametros':([80,135,],[101,185,]),'expresion':([80,81,83,84,86,100,118,120,132,135,139,164,207,242,243,244,254,268,],[102,110,112,115,117,136,170,172,183,102,188,115,239,251,252,253,262,273,]),'exp':([80,81,83,84,86,100,118,120,132,135,139,144,145,146,147,150,151,164,189,192,207,242,243,244,254,268,],[104,104,104,104,104,104,104,104,104,104,104,193,194,195,196,197,198,104,231,232,104,104,104,104,104,104,]),'termino':([80,81,83,84,86,100,118,120,132,135,139,144,145,146,147,150,151,154,155,164,189,192,207,242,243,244,254,268,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,199,200,105,105,105,105,105,105,105,105,105,]),'factor':([80,81,83,84,86,100,118,120,132,135,139,144,145,146,147,150,151,154,155,164,189,192,207,242,243,244,254,268,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'masomenos':([80,81,83,84,86,100,118,120,132,135,139,144,145,146,147,150,151,154,155,164,189,192,207,242,243,244,254,268,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'escrituraciclo':([84,164,],[113,203,]),'arrexp':([88,99,119,134,],[119,134,171,184,]),'arrini':([95,125,],[125,177,]),'tipociclo':([96,263,],[129,269,]),'opcionid':([99,],[133,]),'cicloparametros':([102,188,],[138,230,]),'expresionsig':([104,],[141,]),'expciclo':([105,],[149,]),'factorciclo':([106,],[153,]),'varcte':([107,],[157,]),'otro':([113,203,],[163,235,]),'ciclodim':([116,205,],[166,237,]),'bloquefunc':([123,266,267,270,275,276,],[174,271,272,274,277,278,]),'opciontipo':([128,],[179,]),'expresionsigequal':([142,143,],[189,192,]),'bloqueopcionfunc':([175,211,],[210,241,]),'estatutofunc':([175,211,],[211,211,]),'decisionfunc':([175,211,],[214,214,]),'repeticionfunc':([175,211,],[217,217,]),'condicionalfunc':([175,211,],[221,221,]),'nocondicionalfunc':([175,211,],[222,222,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PRO ID r_register_global PTOCOM opvars opfunciones MAIN PARIZQ PARDER bloque','program',10,'p_program','parser.py',10),
  ('opvars -> vars','opvars',1,'p_opvars','parser.py',13),
  ('opvars -> empty','opvars',1,'p_opvars','parser.py',14),
  ('opfunciones -> funciones opfunciones','opfunciones',2,'p_opfunciones','parser.py',17),
  ('opfunciones -> empty','opfunciones',1,'p_opfunciones','parser.py',18),
  ('vars -> VARTOKEN tipo ID r_register_variable_name arr arr varciclo PTOCOM tipociclo','vars',9,'p_vars','parser.py',21),
  ('varciclo -> COMA ID r_register_variable_name arr arr varciclo','varciclo',6,'p_varciclo','parser.py',24),
  ('varciclo -> empty','varciclo',1,'p_varciclo','parser.py',25),
  ('arr -> CORIZQ CTEI CORDER','arr',3,'p_arr','parser.py',28),
  ('arr -> empty','arr',1,'p_arr','parser.py',29),
  ('tipociclo -> tipo opciontipo','tipociclo',2,'p_tipociclo','parser.py',32),
  ('tipociclo -> empty','tipociclo',1,'p_tipociclo','parser.py',33),
  ('opciontipo -> ID arr arr varciclo PTOCOM tipociclo','opciontipo',6,'p_opciontipo','parser.py',36),
  ('opciontipo -> MODULE ID PARIZQ opcionvarsimple PARDER opvars bloquefunc','opciontipo',7,'p_opciontipo','parser.py',37),
  ('tipo -> INT r_register_variable_type','tipo',2,'p_tipo','parser.py',40),
  ('tipo -> FLT r_register_variable_type','tipo',2,'p_tipo','parser.py',41),
  ('tipo -> CHAR r_register_variable_type','tipo',2,'p_tipo','parser.py',42),
  ('tipo_func -> INT r_register_function','tipo_func',2,'p_tipo_func','parser.py',45),
  ('tipo_func -> FLT r_register_function','tipo_func',2,'p_tipo_func','parser.py',46),
  ('tipo_func -> CHAR r_register_function','tipo_func',2,'p_tipo_func','parser.py',47),
  ('varsimple -> tipo ident','varsimple',2,'p_varsimple','parser.py',51),
  ('funciones -> funcionvoid','funciones',1,'p_funciones','parser.py',54),
  ('funciones -> funcion','funciones',1,'p_funciones','parser.py',55),
  ('funcionvoid -> VOID r_register_function MODULE ID r_update_curr_function_name PARIZQ opcionvarsimple PARDER opvars bloque','funcionvoid',10,'p_funcionvoid','parser.py',58),
  ('opcionvarsimple -> varsimple ciclovarsimple','opcionvarsimple',2,'p_opcionvarsimple','parser.py',61),
  ('opcionvarsimple -> empty','opcionvarsimple',1,'p_opcionvarsimple','parser.py',62),
  ('ciclovarsimple -> COMA varsimple ciclovarsimple','ciclovarsimple',3,'p_ciclovarsimple','parser.py',65),
  ('ciclovarsimple -> empty','ciclovarsimple',1,'p_ciclovarsimple','parser.py',66),
  ('funcion -> tipo_func MODULE ID r_update_curr_function_name PARIZQ opcionvarsimple PARDER opvars bloquefunc','funcion',9,'p_funcion','parser.py',69),
  ('ident -> ID arrini arrini','ident',3,'p_ident','parser.py',72),
  ('arrini -> CORIZQ CORDER','arrini',2,'p_arrini','parser.py',75),
  ('arrini -> empty','arrini',1,'p_arrini','parser.py',76),
  ('bloque -> KEYIZQ bloqueopcion KEYDER','bloque',3,'p_bloque','parser.py',79),
  ('bloqueopcion -> estatuto bloqueopcion','bloqueopcion',2,'p_bloqueopcion','parser.py',82),
  ('bloqueopcion -> empty','bloqueopcion',1,'p_bloqueopcion','parser.py',83),
  ('bloquefunc -> KEYIZQ bloqueopcionfunc KEYDER','bloquefunc',3,'p_bloquefunc','parser.py',86),
  ('bloqueopcionfunc -> estatutofunc bloqueopcionfunc','bloqueopcionfunc',2,'p_bloqueopcionfunc','parser.py',89),
  ('bloqueopcionfunc -> empty','bloqueopcionfunc',1,'p_bloqueopcionfunc','parser.py',90),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','parser.py',93),
  ('estatuto -> decision','estatuto',1,'p_estatuto','parser.py',94),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','parser.py',95),
  ('estatuto -> llamadafunc','estatuto',1,'p_estatuto','parser.py',96),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','parser.py',97),
  ('estatuto -> lectura','estatuto',1,'p_estatuto','parser.py',98),
  ('estatutofunc -> asignacion','estatutofunc',1,'p_estatutofunc','parser.py',101),
  ('estatutofunc -> decisionfunc','estatutofunc',1,'p_estatutofunc','parser.py',102),
  ('estatutofunc -> escritura','estatutofunc',1,'p_estatutofunc','parser.py',103),
  ('estatutofunc -> llamadafunc','estatutofunc',1,'p_estatutofunc','parser.py',104),
  ('estatutofunc -> repeticionfunc','estatutofunc',1,'p_estatutofunc','parser.py',105),
  ('estatutofunc -> lectura','estatutofunc',1,'p_estatutofunc','parser.py',106),
  ('estatutofunc -> RETURN PARIZQ expresion PARDER PTOCOM','estatutofunc',5,'p_estatutofunc','parser.py',107),
  ('asignacion -> ID asignacionarr asignacionarr IGU expresion PTOCOM','asignacion',6,'p_asignacion','parser.py',111),
  ('asignacionarr -> CORIZQ expresion CORDER','asignacionarr',3,'p_asignacionarr','parser.py',114),
  ('asignacionarr -> empty','asignacionarr',1,'p_asignacionarr','parser.py',115),
  ('expresion -> exp expresionsig','expresion',2,'p_expresion','parser.py',119),
  ('expresionsig -> MAY expresionsigequal exp','expresionsig',3,'p_expresionsig','parser.py',122),
  ('expresionsig -> MEN expresionsigequal exp','expresionsig',3,'p_expresionsig','parser.py',123),
  ('expresionsig -> DIF exp','expresionsig',2,'p_expresionsig','parser.py',124),
  ('expresionsig -> IGUIGU exp','expresionsig',2,'p_expresionsig','parser.py',125),
  ('expresionsig -> AND exp','expresionsig',2,'p_expresionsig','parser.py',126),
  ('expresionsig -> OR exp','expresionsig',2,'p_expresionsig','parser.py',127),
  ('expresionsig -> empty','expresionsig',1,'p_expresionsig','parser.py',128),
  ('expresionsigequal -> IGU','expresionsigequal',1,'p_expresionsigequal','parser.py',131),
  ('expresionsigequal -> empty','expresionsigequal',1,'p_expresionsigequal','parser.py',132),
  ('exp -> termino expciclo','exp',2,'p_exp','parser.py',135),
  ('expciclo -> MAS exp','expciclo',2,'p_expciclo','parser.py',138),
  ('expciclo -> MENOS exp','expciclo',2,'p_expciclo','parser.py',139),
  ('expciclo -> empty','expciclo',1,'p_expciclo','parser.py',140),
  ('termino -> factor factorciclo','termino',2,'p_termino','parser.py',144),
  ('factorciclo -> MULT termino','factorciclo',2,'p_factorciclo','parser.py',147),
  ('factorciclo -> DIV termino','factorciclo',2,'p_factorciclo','parser.py',148),
  ('factorciclo -> empty','factorciclo',1,'p_factorciclo','parser.py',149),
  ('factor -> PARIZQ expresion PARDER','factor',3,'p_factor','parser.py',153),
  ('factor -> masomenos varcte','factor',2,'p_factor','parser.py',154),
  ('factor -> ID opcionid','factor',2,'p_factor','parser.py',155),
  ('masomenos -> MAS','masomenos',1,'p_masomenos','parser.py',159),
  ('masomenos -> MENOS','masomenos',1,'p_masomenos','parser.py',160),
  ('masomenos -> empty','masomenos',1,'p_masomenos','parser.py',161),
  ('opcionid -> arrexp arrexp','opcionid',2,'p_opcionid','parser.py',165),
  ('opcionid -> PARIZQ parametros PARDER','opcionid',3,'p_opcionid','parser.py',166),
  ('varcte -> iddim','varcte',1,'p_varcte','parser.py',169),
  ('varcte -> CTEI','varcte',1,'p_varcte','parser.py',170),
  ('varcte -> CTEF','varcte',1,'p_varcte','parser.py',171),
  ('parametros -> expresion cicloparametros','parametros',2,'p_parametros','parser.py',175),
  ('parametros -> empty','parametros',1,'p_parametros','parser.py',176),
  ('cicloparametros -> COMA expresion cicloparametros','cicloparametros',3,'p_cicloparametros','parser.py',179),
  ('cicloparametros -> empty','cicloparametros',1,'p_cicloparametros','parser.py',180),
  ('decision -> IF PARIZQ expresion PARDER THEN bloque ELSE bloque','decision',8,'p_decision','parser.py',184),
  ('escritura -> WRITE PARIZQ escrituraciclo otro PARDER PTOCOM','escritura',6,'p_escritura','parser.py',187),
  ('escrituraciclo -> CTE_STRING','escrituraciclo',1,'p_escrituraciclo','parser.py',190),
  ('escrituraciclo -> expresion','escrituraciclo',1,'p_escrituraciclo','parser.py',191),
  ('otro -> COMA escrituraciclo otro','otro',3,'p_otro','parser.py',194),
  ('otro -> empty','otro',1,'p_otro','parser.py',195),
  ('llamadafunc -> ID PARIZQ parametros PARDER PTOCOM','llamadafunc',5,'p_llamadafunc','parser.py',199),
  ('lectura -> READ PARIZQ iddim ciclodim PARDER PTOCOM','lectura',6,'p_lectura','parser.py',202),
  ('ciclodim -> COMA iddim ciclodim','ciclodim',3,'p_ciclodim','parser.py',205),
  ('ciclodim -> empty','ciclodim',1,'p_ciclodim','parser.py',206),
  ('iddim -> ID arrexp arrexp','iddim',3,'p_iddim','parser.py',210),
  ('arrexp -> CORIZQ expresion CORDER','arrexp',3,'p_arrexp','parser.py',213),
  ('arrexp -> empty','arrexp',1,'p_arrexp','parser.py',214),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','parser.py',217),
  ('repeticion -> nocondicional','repeticion',1,'p_repeticion','parser.py',218),
  ('condicional -> WHILE PARIZQ expresion PARDER DO bloque','condicional',6,'p_condicional','parser.py',222),
  ('nocondicional -> FOR iddim IGU expresion TO expresion DO bloque','nocondicional',8,'p_nocondicional','parser.py',225),
  ('decisionfunc -> IF PARIZQ expresion PARDER THEN bloquefunc ELSE bloquefunc','decisionfunc',8,'p_decisionfunc','parser.py',229),
  ('repeticionfunc -> condicionalfunc','repeticionfunc',1,'p_repeticionfunc','parser.py',232),
  ('repeticionfunc -> nocondicionalfunc','repeticionfunc',1,'p_repeticionfunc','parser.py',233),
  ('condicionalfunc -> WHILE PARIZQ expresion PARDER DO bloquefunc','condicionalfunc',6,'p_condicionalfunc','parser.py',237),
  ('nocondicionalfunc -> FOR iddim IGU expresion TO expresion DO bloquefunc','nocondicionalfunc',8,'p_nocondicionalfunc','parser.py',240),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',243),
  ('r_register_global -> <empty>','r_register_global',0,'p_r_register_global','parser.py',253),
  ('r_register_function -> <empty>','r_register_function',0,'p_r_register_function','parser.py',258),
  ('r_update_curr_function_name -> <empty>','r_update_curr_function_name',0,'p_r_update_curr_function_name','parser.py',262),
  ('r_register_variable_type -> <empty>','r_register_variable_type',0,'p_r_register_variable_type','parser.py',266),
  ('r_register_variable_name -> <empty>','r_register_variable_name',0,'p_r_register_variable_name','parser.py',270),
]
